// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  nombre    String
  apellido  String
  telefono  String
  documento Int
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  negocios  Negocio[]
  role      Role?     @relation(fields: [roleId], references: [id]) // Relación con el modelo Role
  roleId    Int? // Campo para almacenar el ID del rol
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Negocio {
  id_negocio        Int            @id @default(autoincrement())
  nombre_negocio    String
  direccion_negocio String
  fecha_creacion    DateTime       @default(now())
  userId            Int
  usuario           User           @relation(fields: [userId], references: [id])
  distribuidores    Distribuidor[] @relation("DistribuidoresNegocios")
}

model Distribuidor {
  id_distribuidor        Int                   @id @default(autoincrement())
  nombre_distribuidor    String
  apellido_distribuidor  String
  telefono_distribuidor  String
  documento_distribuidor Int
  fecha_creacion         DateTime              @default(now())
  negocios               Negocio[]             @relation("DistribuidoresNegocios")
  granjas_distribuidor   Granja_Distribuidor[]
}

// Modelo de "Granja_Distribuidor"
model Granja_Distribuidor {
  id_gd              Int                  @id @default(autoincrement())
  distribuidor       Distribuidor         @relation(fields: [id_distribuidor], references: [id_distribuidor])
  granja             Granja               @relation(fields: [id_granja], references: [id_granja])
  Movimiento_Entrada Movimiento_Entrada[]
  id_distribuidor    Int
  id_granja          Int // Creamos un índice único para reemplazar la PK
}

// Modelo de "Movimiento_Entrada"

model Movimiento_Entrada {
  id                 Int                 @id @default(autoincrement())
  fecha              DateTime            @default(now())
  peso               Int
  precio             Int
  distribuidorGranja Granja_Distribuidor @relation(fields: [id_gd], references: [id_gd])
  id_gd              Int
  movimientoSalida   Movimiento_salida[]
  corte              Corte?              @relation(fields: [corteId], references: [id_corte])
  corteId            Int?
}

// Modelo de "Movimiento_salida"
model Movimiento_salida {
  id                  Int                 @id @default(autoincrement())
  fecha               DateTime
  peso                Int
  precio              Int
  movimientoEntrada   Movimiento_Entrada? @relation(fields: [movimientoEntradaId], references: [id])
  movimientoEntradaId Int?
}

model Corte {
  id_corte       Int                  @id @default(autoincrement())
  nombre_corte   String               @unique
  presentacion   String
  descripcion    String
  fecha_creacion DateTime             @default(now())
  movimientos    Movimiento_Entrada[]
}

model Granja {
  id_granja            Int                   @id @default(autoincrement())
  nombre_granja        String
  direccion            String                @unique
  fecha_creacion       DateTime              @default(now())
  razas                Granja_Raza           @relation(fields: [id_granja_raza], references: [id_granja_raza], onDelete: Cascade) // Relación muchos a muchos con Categoria_Animal
  id_granja_raza       Int
  granjas_distribuidor Granja_Distribuidor[]
}

//tabla intermedia entre granja y raza
model Granja_Raza {
  id_granja_raza Int      @id @default(autoincrement())
  id_granja      Int
  id_raza        Int // Cambiar el tipo a Int
  granja         Granja[]
  raza           Razas    @relation(fields: [id_raza], references: [id_raza])
}

model Razas {
  id_raza     Int           @id @default(autoincrement()) // Cambiar el tipo a Int
  nombre_raza String[]      @unique
  Animal      Animal?       @relation(fields: [id_animal], references: [id_animal])
  id_animal   Int? // Creamos un índice único para reemplazar la PK
  granja_raza Granja_Raza[]
}

model Animal {
  id_animal     Int     @id @default(autoincrement())
  nombre_animal String  @unique
  Raza          Razas[]
}
